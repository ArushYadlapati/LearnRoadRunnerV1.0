(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{397:function(e,o,t){e.exports=t.p+"assets/img/YouAreHere-FollowerPIDTuning-quarter.9aaf56cf.png"},457:function(e,o,t){"use strict";t.r(o);var a=t(46),n=Object(a.a)({},(function(){var e=this,o=e.$createElement,a=e._self._c||o;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"follower-pid-tuning"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#follower-pid-tuning"}},[e._v("#")]),e._v(" Follower PID Tuning")]),e._v(" "),a("figure",{attrs:{align:"center"}},[a("img",{attrs:{src:t(397),alt:"You are on the follower pid tuning step"}}),e._v(" "),a("figcaption",{staticClass:"mt-2 text-center text-gray-600"},[e._v("You are here")])]),e._v(" "),a("p",[e._v("This is the last tuning step. Here, you will tune the closed loop feedback controller. This should improve your path following dramatically.")]),e._v(" "),a("p",[e._v("There are two alternative opmodes for this process, "),a("code",[e._v("BackAndForth")]),e._v(" or "),a("code",[e._v("FollowerPIDTuner")]),e._v(".")]),e._v(" "),a("p",[e._v("It is recommended to run the "),a("code",[e._v("BackAndForth")]),e._v(" opmode to get a set of coarse PID gains and then run the same process using "),a("code",[e._v("FollowerPIDTuner")]),e._v(" for further fine tuning.\nThe "),a("code",[e._v("BackAndForth")]),e._v(" opmode simply travels in a straight line back and forth. It is easy to see major errors in translation and heading PID accumulate here.")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("FollowerPIDTuner")]),e._v(" will follow a large square. The bot will turn "),a("em",[e._v("counterclockwise")]),e._v(" on each corner. If your heading is off, your entire square is destroyed and you have to keep resetting the bot. It's quite arduous. Use the "),a("code",[e._v("BackAndForth")]),e._v(" opmode for initial tunings and then continue to further fine tune with "),a("code",[e._v("FollowerPIDTuner")]),e._v(".")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Run the "),a("code",[e._v("BackAndForth")]),e._v(" opmode via the RC.")])]),e._v(" "),a("li",[a("p",[e._v("Then, connect to the RC phone's wifi network. The password to the network is located in the "),a("code",[e._v("Program and Manage")]),e._v(" menu.")])]),e._v(" "),a("li",[a("p",[e._v("Navigate to "),a("code",[e._v("192.168.49.1:8080/dash")]),e._v(" with a phone RC or "),a("code",[e._v("192.168.43.1:8080/dash")]),e._v(" with a Control Hub.")])]),e._v(" "),a("li",[a("p",[e._v("Ensure that you have the "),a("code",[e._v("Field")]),e._v(" view selected in the top right.")])]),e._v(" "),a("li",[a("p",[e._v("You should see two lines and two circles being drawn: "),a("span",{staticClass:"px-1 py-1 text-black rounded md:px-2 mb:pb-2",staticStyle:{background:"#4CAF50"}},[e._v("green")]),e._v(" for the target position and "),a("span",{staticClass:"px-1 py-1 text-white rounded md:px-2",staticStyle:{background:"#3F51B5"}},[e._v("blue")]),e._v(" for your bot's actual position.")])]),e._v(" "),a("li",[a("p",[e._v("Look for the "),a("code",[e._v("SampleMecanumDrive")]),e._v(" in the right sidebar. Open that dropdown. You should be seeing two options: "),a("code",[e._v("HEADING_PID")]),e._v(" and "),a("code",[e._v("TRANSLATION_PID")]),e._v(". Both options are located in the "),a("code",[e._v("SampleMecanumDrive")]),e._v(" file.")])]),e._v(" "),a("li",[a("p",[e._v("Open up "),a("code",[e._v("HEADING_PID")]),e._v(" first. Just keep increasing "),a("code",[e._v("kP")]),e._v(" until the robot starts to keep an accurate heading. This was around 8 in my experience, although your mileage may vary. You should not need to adjust "),a("code",[e._v("kD")]),e._v(" and "),a("code",[e._v("kI")]),e._v(".")])]),e._v(" "),a("li",[a("p",[e._v("Open up "),a("code",[e._v("TRANSLATION_PID")]),e._v(" next. Once again, keep increasing "),a("code",[e._v("kP")]),e._v(" until the robot starts to adjust itself and follows the path. This was also around 8 in my experience, although your mileage may vary. You should not need to adjust "),a("code",[e._v("kD")]),e._v(" and "),a("code",[e._v("kI")]),e._v(".")])]),e._v(" "),a("li",[a("p",[e._v("Once that's tuned, you should be done! Remember that any changes in Dashboard must be reflected in the appropriate file. So, you should copy-paste your numbers into the PID object in "),a("code",[e._v("SampleMecanumDrive.java")]),e._v(".")])]),e._v(" "),a("li",[a("p",[e._v("Feel free to run the same tuning process with "),a("code",[e._v("FollowerPIDTuner")]),e._v(". This is encouraged for further accuracy.")])]),e._v(" "),a("li",[a("p",[e._v("You should be done! Go on to the "),a("code",[e._v("SplineTest")]),e._v(" to ensure that your following is accurate.")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("Note:")]),e._v(" Earlier I mentioned that you should not need to use "),a("code",[e._v("kI")]),e._v(" or "),a("code",[e._v("kD")]),e._v(" for your follower PID's. Those are just basic guidelines. "),a("code",[e._v("kD")]),e._v(" actually indirectly functions as a P Controller on pose velocity. Therefore, setting "),a("code",[e._v("kD")]),e._v(" to a non-zero value (1 or something), "),a("em",[e._v("IF you are using feedforward instead of velocity pid")]),e._v(", may help keep your pose velocity constant across battery voltages. "),a("em",[e._v("DO NOT")]),e._v(" set "),a("code",[e._v("kD")]),e._v(" if you are using drive velocity PID as they will overlap and fight each other.")])])]),e._v(" "),a("h1",{attrs:{id:"informal-video"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#informal-video"}},[e._v("#")]),e._v(" Informal Video")]),e._v(" "),a("p",[e._v("This was originally meant to be temporary, but was never finished, so the quality is atrocious but hopefully it ends up helping ðŸ˜ƒ, it should explain well enough.")]),e._v(" "),a("div",{staticClass:"flex justify-center"},[a("iframe",{attrs:{width:"560",height:"315",src:"https://www.youtube.com/embed/e6k_gP2YCmc",frameborder:"0",allow:"autoplay; encrypted-media",allowfullscreen:""}})])])}),[],!1,null,null,null);o.default=n.exports}}]);